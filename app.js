
//Global variables.
var allProducts = []; //Holds all product objects created by Product constructor.
var productQue = []; //Holds 6 unique integers generated by reloadDisplayQue function.
var productDisplay = document.getElementById("productDisplay"); //Parent element for displayed products.
var clickCounter = 0; //Records the amount of votes made by the participant. 
var loggedData = localStorage.getItem('SavedData');
var roundCounter = 0; //recordds the amount of games that are saved in local storage. 
var width = 0; //width of the progress bar. 

function Product(img, name) {//Creates each prodcut instance and adds to them to allProducts.
  this.img = img;
  this.shown = [0];
  this.voted = [0];
  this.name = name;
  allProducts.push(this);

};

function reloadDisplayQue() {//Creates 6 unique random numbers and adds them to productQue array. 
  while (productQue.length < 6) {
    var randomIndex = Math.floor(Math.random() * allProducts.length);
    while (productQue.includes(randomIndex)) {
      randomIndex = Math.floor(Math.random() * allProducts.length);
    }
    productQue.push(randomIndex);
  };
}

//Function that will select 3 product instances from allProducts at indices corresponding
//to the first 3 indices of productQue adding their corresponding image to the DOM.
function renderToDOM() {
  for (i = 0; i < 3; i++) {//Creates 3 image elements containing product pictures and renders them to the DOM.
    var product = document.createElement("img");
    product.setAttribute("src", allProducts[productQue[i]].img);
    product.setAttribute("class", "product");
    product.setAttribute("id", allProducts[productQue[i]].name);
    productDisplay.appendChild(product);
  }
  for (i = 0; i < 3; i++) {//Raises show prperty of productDisplayed allProducts by 1.
    var newShownArr = allProducts[productQue[i]].shown;
    newShownArr[roundCounter] = newShownArr[roundCounter] + 1;
    allProducts[productQue[i]]['shown'] = newShownArr;
  }
  productDisplay.addEventListener("click", vote);
}

function vote() {//Raises vote property of whatever object corresponds to the img clicked.
  var clicked = event.target
  console.log(clicked);
  for (i = 0; i < allProducts.length; i++) {//finds object assciated with img.
    if (allProducts[i].name === clicked.id && clickCounter < 25) {//Once object is found voted property is increased by 1.
      var newVoteArr = allProducts[i].voted;
      newVoteArr[roundCounter] = newVoteArr[roundCounter] + 1;
      allProducts[i]['voted'] = newVoteArr
      console.log(allProducts[i].name + " votes: " + allProducts[i].voted[roundCounter]);

    }
  }
  clickCounter += 1;
  if (clickCounter < 25) {
    nextallProducts();
    move();
  } else if (clickCounter === 25) {
    createChart();
    move();
  }
}

function nextallProducts() {//Removes first three used indices stored in productQue then removes the 3 allProducts productDisplayed. 
  productQue.splice(0, 3);
  for (i = 0; i < 3; i++) {
    var child = document.getElementsByClassName("product")[0];
    productDisplay.removeChild(child);
  }
  reloadDisplayQue();
  renderToDOM();
};

//progress bar
function move() {
  var elem = document.getElementById("myBar");
  width += 4;
  elem.style.width = width + '%';
  elem.innerHTML = width * 1 + '%';
}



//Creates chart showing items vote total compared with the shown total for the current game. 
//In addition the total number of votes and times displayed for ALL games will be shown as well (the lighter bars).
function createChart() {
  var saveCount = JSON.stringify(roundCounter);
  localStorage.setItem('round', saveCount);
  saveData = JSON.stringify(allProducts);
  localStorage.setItem('SavedData', saveData);
  var chartCanvas = document.getElementById('graph');
  var voteData = [];
  var showData = [];
  var totalVoteData = [];
  var totalShowData = [];
  for (i = 0; i < 20; i++) {
    voteData.push(allProducts[i].voted[roundCounter]);
    showData.push(allProducts[i].shown[roundCounter]);
    var sumOfVotes = allProducts[i].voted.reduce(function (a, b) {
      return a + b;
    }, 0);
    var sumOfShown = allProducts[i].shown.reduce(function (a, b) {
      return a + b;
    }, 0);
    totalVoteData.push(sumOfVotes);
    totalShowData.push(sumOfShown);
  };


  var chartData = {
    type: 'bar',
    data: {
      labels: ['bag', 'banana', 'bathroom', 'boots', 'breakfast', 'bubblegum', 'chair', 'cthulhu', 'dogduck', 'dragon',
        'pen', 'pet sweep', 'scissors', 'shark', 'sweep', 'tauntaun', 'unicorn', 'usb', 'water can', 'wine glass'],
      datasets: [{
        label: 'Current Game Votes',
        data: voteData,
        backgroundColor: 'rgb(255, 255, 255)'
      },
      {
        label: 'Displayed During current Game',
        data: showData,
        backgroundColor: 'rgb(255, 255, 255)'
      },
      {
        label: 'Displayed Over All Games',
        data: totalShowData,
        backgroundColor: 'rgba(255, 255, 255, 0.5)'
      },
      {
        label: 'Votes Over All Games',
        data: totalVoteData,
        backgroundColor: 'rgba(255, 255, 255, 0.5)'
      }]
    },
    options: {
      title: {
        productDisplay: true,
        text: 'Vote Total'
      }
    },
  }
  var myChart = new Chart(chartCanvas, chartData);
  //render reset data button to DOM.
  var resetData = document.getElementById('reset');
  var resetButton = document.createElement('input')
  resetButton.setAttribute('type','submit');
  resetButton.setAttribute('value','Reset Data');
  resetButton.setAttribute('id','Resetbutton');
  resetData.appendChild(resetButton);

  resetData.addEventListener('click', clearLocalStorage);
  function clearLocalStorage(){
  localStorage.clear();
  }
}

//Creating all object instances 
if (loggedData) {
  roundCounter = JSON.parse(localStorage.getItem('round')) + 1;
  console.log('This is round ' + roundCounter);
  var stringData = localStorage.getItem('SavedData');
  console.log('stringData: ' + stringData);
  allProducts = JSON.parse(stringData);
  console.log('Product array: ' + allProducts);
  for (i = 0; i < allProducts.length; i++) {
    var newGameVote = allProducts[i].voted
    var newGameShow = allProducts[i].shown
    newGameVote.push(0);
    newGameShow.push(0);
    allProducts[i]['voted'] = newGameVote;
    allProducts[i]['shown'] = newGameShow;
  }
} else {
  console.log('This is round ' + roundCounter);
  var bag = new Product("img/bag.jpg", "bag");
  var banana = new Product("img/banana.jpg", "banana");
  var bathroom = new Product("img/bathroom.jpg", "bathroom");
  var boots = new Product("img/boots.jpg", "boots");
  var breakfast = new Product("img/breakfast.jpg", "breakfast");
  var bubblegum = new Product("img/bubblegum.jpg", "bubblegum");
  var chair = new Product("img/chair.jpg", "chair");
  var cthulhu = new Product("img/cthulhu.jpg", "cthulhu");
  var dogduck = new Product("img/dog-duck.jpg", "dog duck");
  var dragon = new Product("img/dragon.jpg", "dragon");
  var pen = new Product("img/pen.jpg", "pen");
  var petSweep = new Product("img/pet-sweep.jpg", "pet-sweep");
  var scissors = new Product("img/scissors.jpg", "scissors");
  var shark = new Product("img/shark.jpg", "shark");
  var sweep = new Product("img/sweep.png", "sweep");
  var tauntaun = new Product("img/tauntaun.jpg", "tauntaun");
  var unicorn = new Product("img/unicorn.jpg", "unicorn");
  var usb = new Product("img/usb.gif", "usb");
  var waterCan = new Product("img/water-can.jpg", "water-can");
  var wineGlass = new Product("img/wine-glass.jpg", "wineGlass");
};




console.log(productQue);
reloadDisplayQue();
renderToDOM();

